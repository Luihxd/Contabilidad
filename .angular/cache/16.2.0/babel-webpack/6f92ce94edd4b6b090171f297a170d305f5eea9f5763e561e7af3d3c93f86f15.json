{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../ingreso/ingreso.service\";\nimport * as i2 from \"../egreso/egreso.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    redfocus: a0\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    red: a0\n  };\n};\n/*app-formulario\r\n  Componente formulario\r\n  Permite agregar ingresos o egresos con un formulario.\r\n*/\nexport class FormularioComponent {\n  //Se inyecta una dependencia de los servicios de ingreso y egreso.\n  constructor(ingresoServicio, egresoServicio, toastr) {\n    this.ingresoServicio = ingresoServicio;\n    this.egresoServicio = egresoServicio;\n    this.toastr = toastr;\n    //Variable que define si la operación es un ingreso o egreso,\n    //por defecto, la operación es de ingreso.\n    this.tipo = \"ingresoOperacion\";\n  }\n  ngOnInit() {}\n  //Asigna el valor del tipo de operacion cuando se cambia el valor del select del html.\n  tipoDeOperacion(evento) {\n    this.tipo = evento.target.value;\n  }\n  //Dependiendo del tipo de operación, se hace la inserción al arreglo de ingresos o\n  //egresos según corresponda.\n  agregarValor() {\n    if (this.tipo === \"ingresoOperacion\") {\n      this.ingresoServicio.agregarIngreso(this.descripcionInput, this.valorInput);\n    } else if (this.tipo === \"egresoOperacion\") {\n      this.egresoServicio.agregarEgreso(this.descripcionInput, this.valorInput);\n    }\n  }\n}\n_class = FormularioComponent;\n_class.ɵfac = function FormularioComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.IngresoServicio), i0.ɵɵdirectiveInject(i2.EgresoServicio), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-formulario\"]],\n  decls: 13,\n  vars: 14,\n  consts: [[3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"agregar\"], [1, \"agregar_contenedor\"], [1, \"agregar_tipo\", 3, \"ngClass\", \"change\"], [\"value\", \"ingresoOperacion\", \"selected\", \"\"], [\"value\", \"egresoOperacion\"], [\"type\", \"text\", \"name\", \"descripcionInput\", \"placeholder\", \"Agregar Descripci\\u00F3n\", \"required\", \"\", 1, \"agregar_descripcion\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"valorInput\", \"placeholder\", \"Valor\", \"required\", \"\", 1, \"agregar_valor\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"agregar_btn\"], [1, \"ion-ios-checkmark-outline\", 3, \"ngClass\"]],\n  template: function FormularioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FormularioComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(_r0.form.valid && ctx.agregarValor());\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"select\", 4);\n      i0.ɵɵlistener(\"change\", function FormularioComponent_Template_select_change_4_listener($event) {\n        return ctx.tipoDeOperacion($event);\n      });\n      i0.ɵɵelementStart(5, \"option\", 5);\n      i0.ɵɵtext(6, \"Ingreso\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 6);\n      i0.ɵɵtext(8, \"Egreso\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function FormularioComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.descripcionInput = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function FormularioComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.valorInput = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9);\n      i0.ɵɵelement(12, \"i\", 10);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.tipo === \"egresoOperacion\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.tipo === \"egresoOperacion\"))(\"ngModel\", ctx.descripcionInput);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.tipo === \"egresoOperacion\"))(\"ngModel\", ctx.valorInput);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx.tipo === \"egresoOperacion\"));\n    }\n  },\n  dependencies: [i4.NgClass, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormularioComponent","constructor","ingresoServicio","egresoServicio","toastr","tipo","ngOnInit","tipoDeOperacion","evento","target","value","agregarValor","agregarIngreso","descripcionInput","valorInput","agregarEgreso","i0","ɵɵdirectiveInject","i1","IngresoServicio","i2","EgresoServicio","i3","ToastrService","selectors","decls","vars","consts","template","FormularioComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","FormularioComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","form","valid","FormularioComponent_Template_select_change_4_listener","$event","ɵɵtext","ɵɵelementEnd","FormularioComponent_Template_input_ngModelChange_9_listener","FormularioComponent_Template_input_ngModelChange_10_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","_c1"],"sources":["C:\\Users\\LuisRa\\OneDrive\\Documentos\\Cursos\\Angular\\contabilidad-app\\src\\app\\formulario\\formulario.component.ts","C:\\Users\\LuisRa\\OneDrive\\Documentos\\Cursos\\Angular\\contabilidad-app\\src\\app\\formulario\\formulario.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { IngresoServicio } from '../ingreso/ingreso.service';\r\nimport { EgresoServicio } from '../egreso/egreso.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n/*app-formulario\r\n  Componente formulario\r\n  Permite agregar ingresos o egresos con un formulario.\r\n*/\r\n@Component({\r\n  selector: 'app-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.css']\r\n})\r\nexport class FormularioComponent implements OnInit {\r\n\r\n  //Variable que define si la operación es un ingreso o egreso,\r\n  //por defecto, la operación es de ingreso.\r\n  tipo:string=\"ingresoOperacion\";\r\n\r\n  //Variables que corresponden a los campos de ingreso o egreso.\r\n  descripcionInput:string;\r\n  valorInput:number;\r\n\r\n  //Se inyecta una dependencia de los servicios de ingreso y egreso.\r\n  constructor(private ingresoServicio: IngresoServicio,\r\n              private egresoServicio: EgresoServicio\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //Asigna el valor del tipo de operacion cuando se cambia el valor del select del html.\r\n  tipoDeOperacion(evento):void{\r\n    this.tipo = evento.target.value;\r\n  }\r\n\r\n  //Dependiendo del tipo de operación, se hace la inserción al arreglo de ingresos o\r\n  //egresos según corresponda.\r\n  agregarValor(){\r\n    if(this.tipo === \"ingresoOperacion\"){\r\n      this.ingresoServicio.agregarIngreso(this.descripcionInput, this.valorInput);\r\n    }else if (this.tipo === \"egresoOperacion\"){\r\n      this.egresoServicio.agregarEgreso(this.descripcionInput, this.valorInput);\r\n    }\r\n  }\r\n\r\n}\r\n","<form (ngSubmit)=\"f.form.valid && agregarValor()\" #f=\"ngForm\">\r\n  <div class=\"agregar\">\r\n    <div class=\"agregar_contenedor\">\r\n\r\n      <select [ngClass]=\"{redfocus:tipo ==='egresoOperacion'}\" (change)=\"tipoDeOperacion($event)\" class=\"agregar_tipo\">\r\n        <option value=\"ingresoOperacion\" selected>Ingreso</option>\r\n        <option value=\"egresoOperacion\">Egreso</option>\r\n      </select>\r\n      <!--ngModel permite el two-way binding para que guarde el\r\n          contenido del input como valor de la variable\r\n          required hace que no se pueda hacer subdmit si este input\r\n          está vacío-->\r\n      <input [ngClass]=\"{redfocus:tipo ==='egresoOperacion'}\" type=\"text\" class=\"agregar_descripcion\"\r\n        name=\"descripcionInput\" [(ngModel)]=\"descripcionInput\" placeholder=\"Agregar Descripción\" required>\r\n\r\n      <!--ngModel permite el two-way binding para que guarde el\r\n          contenido del input como valor de la variable-->\r\n      <input [ngClass]=\"{redfocus:tipo ==='egresoOperacion'}\" type=\"number\" class=\"agregar_valor\" name=\"valorInput\"\r\n        [(ngModel)]=\"valorInput\" placeholder=\"Valor\" required>\r\n      <!--El type=\"submit\" hace que reconozca el enter\r\n              cuando se capturen los datos-->\r\n      <button type=\"submit\" class=\"agregar_btn\">\r\n        <i [ngClass]=\"{red:tipo ==='egresoOperacion'}\" class=\"ion-ios-checkmark-outline\">\r\n        </i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}