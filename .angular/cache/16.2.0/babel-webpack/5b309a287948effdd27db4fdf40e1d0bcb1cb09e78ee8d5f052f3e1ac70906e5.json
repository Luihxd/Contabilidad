{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ingreso.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nfunction IngresoComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function IngresoComponent_div_3_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ingreso_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eliminarIngreso(ingreso_r1));\n    });\n    i0.ɵɵelement(9, \"i\", 9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ingreso_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ingreso_r1.descripcion);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind4(6, 2, ingreso_r1.valor, \"MNX\", \"$\", \"1.0-2\"));\n  }\n}\n/*app-ingreso\r\n  Componente ingreso\r\n  Muestra la lista de ingresos, y da la opción de borrarlos.\r\n*/\nexport class IngresoComponent {\n  /*Se inyecta una dependencia del servicio de ingreso para\r\n  inicializar el arreglo de ingresos que tenemos creado en\r\n  en el servicio. Además de una dependencia de la librería\r\n  ngx-toastr para mostrar notificaciones.*/\n  constructor(ingresoServicio, toastr) {\n    this.ingresoServicio = ingresoServicio;\n    this.toastr = toastr;\n    //Arreglo de ingresos.\n    this.ingresos = [];\n  }\n  //Inicializa el arreglo (vacío) de ingresos con los\n  //ingresos del arreglo del ingresoServicio.\n  ngOnInit() {\n    this.ingresos = this.ingresoServicio.ingresos;\n  }\n  //Elimina del arreglo el ingreso que recibe como\n  //parámetro en el html.\n  eliminarIngreso(ingreso) {\n    this.ingresoServicio.eliminarIngreso(ingreso);\n    this.notificarEliminacion(ingreso);\n  }\n  //Función para mostrar la notificación de que se eliminó un ingreso\n  //con el uso de la librería ngx-toastr\n  notificarEliminacion(ingreso) {\n    this.toastr.info(ingreso.descripcion + \" con valor de $\" + ingreso.valor, \"Eliminacion de ingreso\");\n  }\n}\n_class = IngresoComponent;\n_class.ɵfac = function IngresoComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.IngresoServicio), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-ingreso\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"ingreso\"], [1, \"ingreso_titulo\"], [\"class\", \"elemento limpiarEstilos\", 4, \"ngFor\", \"ngForOf\"], [1, \"elemento\", \"limpiarEstilos\"], [1, \"elemento_descripcion\"], [1, \"right\", \"limpiarEstilos\"], [1, \"elemento_valor\"], [1, \"elemento_eliminar\"], [1, \"elemento_eliminar--btn\", 3, \"click\"], [1, \"ion-ios-close-outline\"]],\n  template: function IngresoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Ingresos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, IngresoComponent_div_3_Template, 10, 7, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ingresos);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","IngresoComponent_div_3_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r3","ingreso_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","eliminarIngreso","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","descripcion","ɵɵpipeBind4","valor","IngresoComponent","constructor","ingresoServicio","toastr","ingresos","ngOnInit","ingreso","notificarEliminacion","info","ɵɵdirectiveInject","i1","IngresoServicio","i2","ToastrService","selectors","decls","vars","consts","template","IngresoComponent_Template","rf","ctx","ɵɵtemplate","IngresoComponent_div_3_Template","ɵɵproperty"],"sources":["C:\\Users\\LuisRa\\OneDrive\\Documentos\\Cursos\\Angular\\contabilidad-app\\src\\app\\ingreso\\ingreso.component.ts","C:\\Users\\LuisRa\\OneDrive\\Documentos\\Cursos\\Angular\\contabilidad-app\\src\\app\\ingreso\\ingreso.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Ingreso } from './ingreso.model';\r\nimport { IngresoServicio } from './ingreso.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n/*app-ingreso\r\n  Componente ingreso\r\n  Muestra la lista de ingresos, y da la opción de borrarlos.\r\n*/\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\nexport class IngresoComponent implements OnInit {\r\n\r\n  //Arreglo de ingresos.\r\n  ingresos:Ingreso[] = [];\r\n\r\n  /*Se inyecta una dependencia del servicio de ingreso para\r\n  inicializar el arreglo de ingresos que tenemos creado en\r\n  en el servicio. Además de una dependencia de la librería\r\n  ngx-toastr para mostrar notificaciones.*/\r\n  constructor(private ingresoServicio:IngresoServicio,\r\n              private toastr: ToastrService) {\r\n\r\n  }\r\n\r\n  //Inicializa el arreglo (vacío) de ingresos con los\r\n  //ingresos del arreglo del ingresoServicio.\r\n  ngOnInit(): void {\r\n    this.ingresos = this.ingresoServicio.ingresos;\r\n  }\r\n\r\n  //Elimina del arreglo el ingreso que recibe como\r\n  //parámetro en el html.\r\n  eliminarIngreso(ingreso: Ingreso): void{\r\n    this.ingresoServicio.eliminarIngreso(ingreso);\r\n    this.notificarEliminacion(ingreso);\r\n  }\r\n\r\n  //Función para mostrar la notificación de que se eliminó un ingreso\r\n  //con el uso de la librería ngx-toastr\r\n  notificarEliminacion(ingreso: Ingreso) {\r\n    this.toastr.info(ingreso.descripcion + \" con valor de $\" + ingreso.valor, \"Eliminacion de ingreso\");\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"ingreso\">\r\n  <h2 class=\"ingreso_titulo\">Ingresos</h2>\r\n      <!--ngFor para mostrar cada egreso del arreglo \"ingresos\" recorriéndolo con una\r\n      varialbe temporal \"ingreso\" y mostrando sus atributos y un botón para eliminarlo-->\r\n      <div *ngFor=\"let ingreso of ingresos\" class=\"elemento limpiarEstilos\">\r\n          <div class=\"elemento_descripcion\">{{ingreso.descripcion}}</div>\r\n          <div class=\"right limpiarEstilos\">\r\n              <div class=\"elemento_valor\">{{ingreso.valor | currency:'MNX':'$': '1.0-2'}}</div>\r\n              <div class=\"elemento_eliminar\">\r\n                  <button class=\"elemento_eliminar--btn\" (click)=\"eliminarIngreso(ingreso)\">\r\n                      <i class=\"ion-ios-close-outline\"></i>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n\r\n\r\n</div>\r\n"],"mappings":";;;;;;;;ICIMA,EAAA,CAAAC,cAAA,aAAsE;IAChCD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC/DH,EAAA,CAAAC,cAAA,aAAkC;IACFD,EAAA,CAAAE,MAAA,GAA+C;;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACjFH,EAAA,CAAAC,cAAA,aAA+B;IACYD,EAAA,CAAAI,UAAA,mBAAAC,wDAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,UAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,eAAA,CAAAL,UAAA,CAAwB;IAAA,EAAC;IACrET,EAAA,CAAAe,SAAA,WAAqC;IACzCf,EAAA,CAAAG,YAAA,EAAS;;;;IANiBH,EAAA,CAAAgB,SAAA,GAAuB;IAAvBhB,EAAA,CAAAiB,iBAAA,CAAAR,UAAA,CAAAS,WAAA,CAAuB;IAEzBlB,EAAA,CAAAgB,SAAA,GAA+C;IAA/ChB,EAAA,CAAAiB,iBAAA,CAAAjB,EAAA,CAAAmB,WAAA,OAAAV,UAAA,CAAAW,KAAA,uBAA+C;;;ADFzF;;;;AASA,OAAM,MAAOC,gBAAgB;EAK3B;;;;EAIAC,YAAoBC,eAA+B,EAC/BC,MAAqB;IADrB,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IAR1B;IACA,KAAAC,QAAQ,GAAa,EAAE;EASvB;EAEA;EACA;EACAC,QAAQA,CAAA;IACN,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACF,eAAe,CAACE,QAAQ;EAC/C;EAEA;EACA;EACAX,eAAeA,CAACa,OAAgB;IAC9B,IAAI,CAACJ,eAAe,CAACT,eAAe,CAACa,OAAO,CAAC;IAC7C,IAAI,CAACC,oBAAoB,CAACD,OAAO,CAAC;EACpC;EAEA;EACA;EACAC,oBAAoBA,CAACD,OAAgB;IACnC,IAAI,CAACH,MAAM,CAACK,IAAI,CAACF,OAAO,CAACT,WAAW,GAAG,iBAAiB,GAAGS,OAAO,CAACP,KAAK,EAAE,wBAAwB,CAAC;EACrG;;SA/BWC,gBAAgB;;mBAAhBA,MAAgB,EAAArB,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;QAAhBb,MAAgB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd7BzC,EAAA,CAAAC,cAAA,aAAqB;MACQD,EAAA,CAAAE,MAAA,eAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAGpCH,EAAA,CAAA2C,UAAA,IAAAC,+BAAA,kBAUM;MAIZ5C,EAAA,CAAAG,YAAA,EAAM;;;MAdyBH,EAAA,CAAAgB,SAAA,GAAW;MAAXhB,EAAA,CAAA6C,UAAA,YAAAH,GAAA,CAAAjB,QAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}