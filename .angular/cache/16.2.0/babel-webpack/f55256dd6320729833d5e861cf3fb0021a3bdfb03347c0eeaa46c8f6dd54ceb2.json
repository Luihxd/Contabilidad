{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./egreso.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nfunction EgresoComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 8)(11, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function EgresoComponent_div_3_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const egreso_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eliminarEgreso(egreso_r1));\n    });\n    i0.ɵɵelement(12, \"i\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const egreso_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(egreso_r1.descripcion);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"- \", i0.ɵɵpipeBind4(6, 3, egreso_r1.valor, \"MNX\", \"$\", \"1.0-2\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 8, ctx_r0.calcularPorcentajeDeEgreso(egreso_r1)));\n  }\n}\n/*app-egreso\r\n  Componente egreso\r\n  Muestra la lista de egresos, y da la opción de borrarlos\r\n*/\nexport class EgresoComponent {\n  /*Se inyecta una dependencia del servicio de egreso para\r\n  inicializar el arreglo de egresos que tenemos creado en\r\n  en el servicio.\r\n  Además de una dependencia de la librería ngx-toastr para mostrar notificaciones*/\n  constructor(egresoServicio, toastr) {\n    this.egresoServicio = egresoServicio;\n    this.toastr = toastr;\n    //Arreglo de ingresos.\n    this.egresos = [];\n  }\n  //Inicializa el arreglo (vacío) de egresos con los\n  //egresos del arreglo del egresoServicio.\n  ngOnInit() {\n    this.egresos = this.egresoServicio.egresos;\n  }\n  //Elimina del arreglo el egreso que recibe como\n  //parámetro en el html.\n  eliminarEgreso(egreso) {\n    this.egresoServicio.eliminarEgreso(egreso);\n  }\n  //Calcula el porcentaje individual de cada egreso\n  //tomando en cuenta el porcentaje total de los egresos\n  //con respecto a los ingresos.\n  calcularPorcentajeDeEgreso(egreso) {\n    return egreso.valor * this.porcentajeTotal / this.egresoTotal;\n  }\n  //Función para mostrar la notificación de que se hizo una inserción correctamente\n  //con el uso de la librería ngx-toastr\n  notificarInsersion(tipo) {\n    this.toastr.success(\"sexo\");\n  }\n}\n_class = EgresoComponent;\n_class.ɵfac = function EgresoComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EgresoServicio), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-egreso\"]],\n  inputs: {\n    porcentajeTotal: \"porcentajeTotal\",\n    egresoTotal: \"egresoTotal\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"egreso\"], [1, \"egreso_titulo\"], [\"class\", \"elemento limpiarEstilos\", 4, \"ngFor\", \"ngForOf\"], [1, \"elemento\", \"limpiarEstilos\"], [1, \"elemento_descripcion\"], [1, \"right\", \"limpiarEstilos\"], [1, \"elemento_valor\"], [1, \"elemento_porcentaje\"], [1, \"elemento_eliminar\"], [1, \"elemento_eliminar--btn\", 3, \"click\"], [1, \"ion-ios-close-outline\"]],\n  template: function EgresoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Egresos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, EgresoComponent_div_3_Template, 13, 10, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.egresos);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.PercentPipe, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EgresoComponent_div_3_Template_button_click_11_listener","restoredCtx","ɵɵrestoreView","_r3","egreso_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","eliminarEgreso","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","descripcion","ɵɵtextInterpolate1","ɵɵpipeBind4","valor","ɵɵpipeBind1","ctx_r0","calcularPorcentajeDeEgreso","EgresoComponent","constructor","egresoServicio","toastr","egresos","ngOnInit","egreso","porcentajeTotal","egresoTotal","notificarInsersion","tipo","success","ɵɵdirectiveInject","i1","EgresoServicio","i2","ToastrService","selectors","inputs","decls","vars","consts","template","EgresoComponent_Template","rf","ctx","ɵɵtemplate","EgresoComponent_div_3_Template","ɵɵproperty"],"sources":["C:\\Users\\LuisRa\\OneDrive\\Documentos\\Cursos\\Angular\\contabilidad-app\\src\\app\\egreso\\egreso.component.ts","C:\\Users\\LuisRa\\OneDrive\\Documentos\\Cursos\\Angular\\contabilidad-app\\src\\app\\egreso\\egreso.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { EgresoServicio } from './egreso.service';\r\nimport { Egreso } from './egreso.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n/*app-egreso\r\n  Componente egreso\r\n  Muestra la lista de egresos, y da la opción de borrarlos\r\n*/\r\n@Component({\r\n  selector: 'app-egreso',\r\n  templateUrl: './egreso.component.html',\r\n  styleUrls: ['./egreso.component.css']\r\n})\r\nexport class EgresoComponent implements OnInit {\r\n\r\n  //Arreglo de ingresos.\r\n  egresos: Egreso[] = [];\r\n\r\n  /*Variables que vienen desde componente padre\r\n  app.component que inyectamos\r\n  gracias al \"@Input()\".*/\r\n  @Input() porcentajeTotal:number;\r\n  @Input() egresoTotal:number;\r\n\r\n  /*Se inyecta una dependencia del servicio de egreso para\r\n  inicializar el arreglo de egresos que tenemos creado en\r\n  en el servicio.\r\n  Además de una dependencia de la librería ngx-toastr para mostrar notificaciones*/\r\n  constructor(private egresoServicio: EgresoServicio,\r\n              private toastr: ToastrService) { }\r\n\r\n  //Inicializa el arreglo (vacío) de egresos con los\r\n  //egresos del arreglo del egresoServicio.\r\n  ngOnInit(): void {\r\n    this.egresos = this.egresoServicio.egresos;\r\n  }\r\n\r\n  //Elimina del arreglo el egreso que recibe como\r\n  //parámetro en el html.\r\n  eliminarEgreso(egreso: Egreso): void{\r\n    this.egresoServicio.eliminarEgreso(egreso);\r\n  }\r\n\r\n  //Calcula el porcentaje individual de cada egreso\r\n  //tomando en cuenta el porcentaje total de los egresos\r\n  //con respecto a los ingresos.\r\n  calcularPorcentajeDeEgreso(egreso: Egreso): number{\r\n    return egreso.valor*this.porcentajeTotal/this.egresoTotal;\r\n  }\r\n\r\n  //Función para mostrar la notificación de que se hizo una inserción correctamente\r\n  //con el uso de la librería ngx-toastr\r\n  notificarInsersion(tipo: string) {\r\n    this.toastr.success(\"sexo\");\r\n  }\r\n\r\n}\r\n","<div class=\"egreso\">\r\n  <h2 class=\"egreso_titulo\">Egresos</h2>\r\n      <!--ngFor para mostrar cada egreso del arreglo \"egresos\" recorriéndolo con una\r\n      varialbe temporal \"egreso\" y mostrando sus atributos, además del porcentaje\r\n      individual y un botón para eliminarlo-->\r\n      <div *ngFor=\"let egreso of egresos\" class=\"elemento limpiarEstilos\" >\r\n          <div class=\"elemento_descripcion\">{{egreso.descripcion}}</div>\r\n          <div class=\"right limpiarEstilos\">\r\n              <div class=\"elemento_valor\">- {{egreso.valor | currency:'MNX':'$': '1.0-2'}}</div>\r\n              <div class=\"elemento_porcentaje\">{{calcularPorcentajeDeEgreso(egreso) | percent}}</div>\r\n              <div class=\"elemento_eliminar\">\r\n                  <button (click)=\"eliminarEgreso(egreso)\" class=\"elemento_eliminar--btn\"><i class=\"ion-ios-close-outline\"></i></button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n</div>\r\n"],"mappings":";;;;;;;;ICKMA,EAAA,CAAAC,cAAA,aAAqE;IAC/BD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC9DH,EAAA,CAAAC,cAAA,aAAkC;IACFD,EAAA,CAAAE,MAAA,GAAgD;;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAClFH,EAAA,CAAAC,cAAA,aAAiC;IAAAD,EAAA,CAAAE,MAAA,GAAgD;;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACvFH,EAAA,CAAAC,cAAA,cAA+B;IACnBD,EAAA,CAAAI,UAAA,mBAAAC,wDAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,cAAA,CAAAL,SAAA,CAAsB;IAAA,EAAC;IAAgCT,EAAA,CAAAe,SAAA,aAAqC;IAAAf,EAAA,CAAAG,YAAA,EAAS;;;;;IAL5FH,EAAA,CAAAgB,SAAA,GAAsB;IAAtBhB,EAAA,CAAAiB,iBAAA,CAAAR,SAAA,CAAAS,WAAA,CAAsB;IAExBlB,EAAA,CAAAgB,SAAA,GAAgD;IAAhDhB,EAAA,CAAAmB,kBAAA,OAAAnB,EAAA,CAAAoB,WAAA,OAAAX,SAAA,CAAAY,KAAA,2BAAgD;IAC3CrB,EAAA,CAAAgB,SAAA,GAAgD;IAAhDhB,EAAA,CAAAiB,iBAAA,CAAAjB,EAAA,CAAAsB,WAAA,OAAAC,MAAA,CAAAC,0BAAA,CAAAf,SAAA,GAAgD;;;ADJ/F;;;;AASA,OAAM,MAAOgB,eAAe;EAW1B;;;;EAIAC,YAAoBC,cAA8B,EAC9BC,MAAqB;IADrB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IAd1B;IACA,KAAAC,OAAO,GAAa,EAAE;EAauB;EAE7C;EACA;EACAC,QAAQA,CAAA;IACN,IAAI,CAACD,OAAO,GAAG,IAAI,CAACF,cAAc,CAACE,OAAO;EAC5C;EAEA;EACA;EACAf,cAAcA,CAACiB,MAAc;IAC3B,IAAI,CAACJ,cAAc,CAACb,cAAc,CAACiB,MAAM,CAAC;EAC5C;EAEA;EACA;EACA;EACAP,0BAA0BA,CAACO,MAAc;IACvC,OAAOA,MAAM,CAACV,KAAK,GAAC,IAAI,CAACW,eAAe,GAAC,IAAI,CAACC,WAAW;EAC3D;EAEA;EACA;EACAC,kBAAkBA,CAACC,IAAY;IAC7B,IAAI,CAACP,MAAM,CAACQ,OAAO,CAAC,MAAM,CAAC;EAC7B;;SAzCWX,eAAe;;mBAAfA,MAAe,EAAAzB,EAAA,CAAAqC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAvC,EAAA,CAAAqC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;QAAfhB,MAAe;EAAAiB,SAAA;EAAAC,MAAA;IAAAX,eAAA;IAAAC,WAAA;EAAA;EAAAW,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd5BjD,EAAA,CAAAC,cAAA,aAAoB;MACQD,EAAA,CAAAE,MAAA,cAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAIlCH,EAAA,CAAAmD,UAAA,IAAAC,8BAAA,mBASM;MAEZpD,EAAA,CAAAG,YAAA,EAAM;;;MAXwBH,EAAA,CAAAgB,SAAA,GAAU;MAAVhB,EAAA,CAAAqD,UAAA,YAAAH,GAAA,CAAArB,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}